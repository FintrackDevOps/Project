{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam Babs\\\\Desktop\\\\devopsPERN\\\\client\\\\src\\\\components\\\\ListTransactions.js\",\n    _s = $RefreshSig$();\n\nimport { transition } from \"d3\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport EditTransaction from \"./EditTransaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTransactions = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]); //delete transaction function\n\n  const deleteTransaction = async id => {\n    try {\n      const deleteTransaction = await fetch(`http://localhost:8000/transactions/${id}`, {\n        method: \"DELETE\"\n      });\n      setTransactions(transactions.filter(transaction => transaction.transaction_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTransactions = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/transactions\");\n      const jsonData = await response.json();\n      setTransactions(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  console.log(transactions);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(EditTransaction, {\n              transaction: transaction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-danger\",\n              onClick: () => deleteTransaction(transaction.transaction_id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, transaction.transaction_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTransactions, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = ListTransactions;\nexport default ListTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTransactions\");","map":{"version":3,"sources":["C:/Users/Adam Babs/Desktop/devopsPERN/client/src/components/ListTransactions.js"],"names":["transition","React","Fragment","useEffect","useState","EditTransaction","ListTransactions","transactions","setTransactions","deleteTransaction","id","fetch","method","filter","transaction","transaction_id","err","console","error","message","getTransactions","response","jsonData","json","log","map","description"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,IAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAI3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD,CAJ2B,CAQ3B;;AAEA,QAAMK,iBAAiB,GAAG,MAAMC,EAAN,IAAY;AAClC,QAAI;AACA,YAAMD,iBAAiB,GAAG,MAAME,KAAK,CAAE,sCAAqCD,EAAG,EAA1C,EAA6C;AAC9EE,QAAAA,MAAM,EAAE;AADsE,OAA7C,CAArC;AAIAJ,MAAAA,eAAe,CAACD,YAAY,CAACM,MAAb,CAAoBC,WAAW,IAAIA,WAAW,CAACC,cAAZ,KAA+BL,EAAlE,CAAD,CAAf;AACH,KAND,CAME,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GAVD;;AAcA,QAAMC,eAAe,GAAG,YAAY;AAChC,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,oCAAD,CAA5B;AACA,YAAMW,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAf,MAAAA,eAAe,CAACc,QAAD,CAAf;AACH,KALD,CAKE,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GATD;;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,OAAO,CAACO,GAAR,CAAYjB,YAAZ;AAEA,sBACI,QAAC,QAAD;AAAA,eACK,GADL,eAEI;AAAO,MAAA,KAAK,EAAC,wBAAb;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBACKA,YAAY,CAACkB,GAAb,CAAiBX,WAAW,iBACzB;AAAA,kCACI;AAAA,sBAAKA,WAAW,CAACY;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,yCAAK,QAAC,eAAD;AAAiB,cAAA,WAAW,EAAEZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,yCAAK;AAAQ,cAAA,KAAK,EAAC,gBAAd;AACD,cAAA,OAAO,EAAE,MAAML,iBAAiB,CAACK,WAAW,CAACC,cAAb,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASD,WAAW,CAACC,cAArB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CArED;;GAAMT,gB;;KAAAA,gB;AAuEN,eAAeA,gBAAf","sourcesContent":["import { transition } from \"d3\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditTransaction from \"./EditTransaction\";\r\n\r\nconst ListTransactions = () => {\r\n\r\n\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n\r\n\r\n    //delete transaction function\r\n\r\n    const deleteTransaction = async id => {\r\n        try {\r\n            const deleteTransaction = await fetch(`http://localhost:8000/transactions/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            setTransactions(transactions.filter(transaction => transaction.transaction_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const getTransactions = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/transactions\");\r\n            const jsonData = await response.json();\r\n\r\n            setTransactions(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n    }, []);\r\n\r\n    console.log(transactions);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <table class=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map(transaction => (\r\n                        <tr key={transaction.transaction_id}>\r\n                            <td>{transaction.description}</td>\r\n                            <td> <EditTransaction transaction={transaction} /></td>\r\n                            <td> <button class=\"btn btn-danger\"\r\n                                onClick={() => deleteTransaction(transaction.transaction_id)}>\r\n                                Delete\r\n                            </button></td>\r\n\r\n                        </tr>\r\n\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nexport default ListTransactions;"]},"metadata":{},"sourceType":"module"}